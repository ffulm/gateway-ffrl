router id ICVPN_IPV4_ADDR;
define ownip = MESH_IPV6_ADDR;
define ownas = AS_NUMBER;

table ibgp; # internal BGP peerings
table ebgp; # external (icvpn) BGP peerings
table freifunk; # kernel table 42 for routing from ff network

### functions ###

# own networks
function is_self_net() {
  return net ~ [ fdef:17a0:fff1::/48+ ];
}

# freifunk ip ranges in general
function is_freifunk() {
  return net ~ [ fc00::/7{48,64},
    2001:bf7::/32+];
}

function is_default() {
  return net ~ [ ::0/0 ];
}

### kernel ###

# synchronize from bird to main kernel routing table
# nothing in the other direction
# (do not sync a default route we received to the main routing table
# as this might collide with the normal default route of the host)
protocol kernel k_mast {
  scan time 10;
  import none;
  export filter {
    krt_prefsrc = ownip;
    accept;
  };
};

# this pseudo-protocol watches all interface up/down events
protocol device {
    scan time 10;
};

### pipes ###

# sync nothing from main routing table to ebgp
# sync routes (not own network) from ebgp to main routing table
protocol pipe p_maintbl {
  peer table ebgp;
  import where !is_self_net();
  export none;
};

# sync routes (not own network) from ebgp to ibgp
# sync routes (all) from ibgp to ebgp
protocol pipe p_ibgptbl {
  table ebgp;
  peer table ibgp;
  import all;
  export where !is_self_net();
};

# sync routes (freifunk and default routes we got) from ibgp to freifunk
# sync nothing from freifunk to ibgp
protocol pipe p_freitbl {
  table ibgp;
  peer table freifunk;
  import none;
  export where is_freifunk() || is_default();
};

### static routes ###

# if no openvpn is running, reject everything we do not have a route for
protocol static unreachable_default {
  route ::/0 reject;
  table freifunk;
};

protocol static static_ff3l {  
  route fdef:17a0:fff1::/48 reject;
  table ebgp;
};

protocol static local_ff3l {
  route fdef:17a0:fff1::/48 via "bat0";
  table freifunk;
};

### templates ###

# template for same city freifunk gateways
template bgp locals {
  table ibgp;
  local as ownas;
  import filter {
    preference = 99;
    accept;
  };
  export where source = RTS_BGP;
  direct;
  next hop self;
};

# template for icvpn gateways of other cities
template bgp peers {
  table ebgp;
  local as ownas;
  # ignore routes for our own network
  import where is_freifunk() && !is_self_net();
  export where is_freifunk() || (source = RTS_BGP);
  route limit 10000;
};

# template for upstream gateways
template bgp upstream from peers {
  # accept freifunk networks and default route
  import where (is_freifunk() || is_default()) && !is_self_net();
};

### additional configuration  ###

#include "/etc/bird/bird6.d/*";


