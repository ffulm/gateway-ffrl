# listen to v6
$SERVER["socket"] == "[::]:80" { 
  $HTTP["host"] =~ "SERVERNAME" {
    url.redirect = ( "^/(.*)" => "https://SERVERNAME/$1" )
    server.name                 = "SERVERNAME"
  }
}

$SERVER["socket"] == "[::]:443" {
    ssl.engine = "enable"
    ssl.pemfile = "/etc/letsencrypt/live/SERVERNAME/ssl.pem"

    # disable compression
    #ssl.use-compression = "disable"

    # disable sslv3 and sslv3
    ssl.use-sslv2 = "disable"
    ssl.use-sslv3 = "disable"
    
    # HSTS
    #setenv.add-response-header = (
    #"Strict-Transport-Security" => "max-age=63072000; includeSubdomains; preload",
    #"X-Frame-Options" => "DENY",
    #"X-Content-Type-Options" => "nosniff"
    #)

    # set very strict cipher priorities
    # ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:AES128+EECDH:AES128+EDH"
    # OR set fallback cipher priorities
    ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"
    ssl.honor-cipher-order = "enable"
    # build cert chain for letsencrypt
    ssl.ca-file = "/etc/letsencrypt/live/SERVERNAME/chain.pem"

    # read stronger DH parameters
    ssl.dh-file = "/etc/ssl/certs/dhparam.pem"
    ssl.ec-curve = "secp384r1"
}

# listen to v4
# http socket with redirect to https
$SERVER["socket"] == ":80" {
  $HTTP["host"] =~ "SERVERNAME" {
    url.redirect = ( "^/(.*)" => "https://SERVERNAME/$1" )
    server.name                 = "SERVERNAME"
  }
}

$SERVER["socket"] == ":443" {
    ssl.engine = "enable"
    ssl.pemfile = "/etc/letsencrypt/live/SERVERNAME/ssl.pem"

    # disable compression
    #ssl.use-compression = "disable"

    # disable sslv3 and sslv3
    ssl.use-sslv2 = "disable"
    ssl.use-sslv3 = "disable"
    
    # HSTS
    #setenv.add-response-header = (
    #"Strict-Transport-Security" => "max-age=63072000; includeSubdomains; preload",
    #"X-Frame-Options" => "DENY",
    #"X-Content-Type-Options" => "nosniff"
    #)

    # set very strict cipher priorities
    # ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:AES128+EECDH:AES128+EDH"
    # OR set fallback cipher priorities
    ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:ECDHE-RSA-AES128-GCM-SHA256:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"
    ssl.honor-cipher-order = "enable"
    # build cert chain for letsencrypt
    ssl.ca-file = "/etc/letsencrypt/live/SERVERNAME/chain.pem"

    # read stronger DH parameters
    ssl.dh-file = "/etc/ssl/certs/dhparam.pem"
    ssl.ec-curve = "secp384r1"
}

server.document-root = "/var/www/"
server.username = "www-data"
server.groupname = "www-data"
server.tag = "Freifunk webserver"
mimetype.assign = (
  ".html" => "text/html", 
  ".txt" => "text/plain",
  ".jpg" => "image/jpeg",
  ".png" => "image/png", 
  ".css" => "text/css",
  ".svg" => "image/svg+xml"
)

index-file.names = ( "index.html", "index.php" )

server.modules = (
	"mod_fastcgi",
	"mod_cgi",
	"mod_access",
#       "mod_accesslog",	
	"mod_alias",
	"mod_compress",
	"mod_redirect",
	"mod_rewrite"
)

# for showing servername on neighbourhood list
$HTTP["url"] =~ "^/cgi-bin/" {
  cgi.assign = ( "data" => "/bin/bash" )
}

cgi.assign = ( ".php" => "/usr/bin/php-cgi" )


#enable for logging
#server.errorlog                 = "/var/log/lighttpd/error.log"
#debug.log-file-not-found        = "enable"

#enable for directory listing (firmware download or something else)
#dir-listing.activate            = "enable"
#dir-listing.hide-dotfiles       = "disable"

fastcgi.server = ( ".php" => ((
                   "bin-path" => "/usr/bin/php-cgi",
                   "socket" => "/tmp/php.socket"
               )))

